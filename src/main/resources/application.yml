#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://springboot-db.cszagrzyjprb.ap-northeast-2.rds.amazonaws.com/sharedsurvey?autoReconnect=true&useSSL=false&serverTimezone=Asia/Seoul
#spring.datasource.username=root
#spring.datasource.password=ayong2gadb

#spring.datasource.url=jdbc:mysql://springboot-db.cszagrzyjprb.ap-northeast-2.rds.amazonaws.com:3306/sharedsurvey?characterEncoding=UTF-8&useTimezone=true&serverTimezone=Asia/Seoul
#spring.datasource.username=ayo_db
#spring.datasource.password=ayong2gadb
#spring.jpa.hibernate.ddl-auto=update
#
#
#spring.servlet.multipart.max-file-size=8MB
#spring.servlet.multipart.max-request-size=8MB
#

# yml 은 json 과 비슷한 데이터 타입
# 여기서 스프링에 대한 모든 설정할 수 있음

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://springboot-db.cszagrzyjprb.ap-northeast-2.rds.amazonaws.com:3306/sharedsurvey2?characterEncoding=UTF-8&useTimezone=true&serverTimezone=Asia/Seoul
    username: ayo_db
    password: ayong2gadb
  servlet:
    multipart:
      max-file-size: 8MB
      max-request-size: 8MB

#  mustache:
#    suffix: .mustache

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update # create || update || none -> create 하면 실행할 때마다 테이블을 새로 만듬(나중엔 update로 변경해야 함)
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        # Entity 만들 때, 변수명 그대로
        # 만약 SpringPhysicalNamingStrategy 를 쓰면 myEmail -> my_email 로 됨, 우리는 그대로 만들것임..
      use-new-id-generator-mappings: false #
    show-sql: false
    properties:
      hibernate.format_sql: true

  jackson:
    serialization:
      fail-on-empty-beans: false


may:
  base_dir: /tmp/tomcat.8080.9056073029680764243/work/Tomcat/localhost/ROOT/

logging:
  file:
    path: logs